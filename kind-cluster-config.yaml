kind: Cluster
apiVersion: kind.x-k8s.io/v1alpha4
name: demo-cluster
networking:
  apiServerAddress: 127.0.0.1
  apiServerPort: 6443
containerdConfigPatches:
- |-
  [plugins."io.containerd.grpc.v1.cri".registry.mirrors."localhost:5001"]
    endpoint = ["http://kind-registry:5000"]
# 2 control plane nodes and three "workers".
#
# While these will not add more real compute capacity and
# have limited isolation, this can be useful for testing
# rolling updates etc.
#
# The API-server and other control plane components will be
# on the control-plane node.
nodes:
- role: control-plane
  image: kindest/node:v1.24.7@sha256:577c630ce8e509131eab1aea12c022190978dd2f745aac5eb1fe65c0807eb315

# - role: control-plane
# - role: control-plane
# - role: worker
# - role: worker
- role: worker
  image: kindest/node:v1.24.7@sha256:577c630ce8e509131eab1aea12c022190978dd2f745aac5eb1fe65c0807eb315
  # Extra port mappings is used to port forward to the kind nodes.
  # This is a cross-platform option to get traffic into your kind cluster.
  # extraPortMappings:
  # # The node port of the jenkins service is going to be 30200 as well
  # - containerPort: 30200
  #   # Jenkins will be accessible on http://localhost:8080
  #   hostPort: 8080
  # The node port of the business-logic service is going to be 30300 as well
  # - containerPort: 30300
  #   # Django endpoints will be accessible on http://localhost:8000
  #   hostPort: 8000
